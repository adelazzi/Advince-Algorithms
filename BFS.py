


graph = [ 

[0,2,1,3,0,0,0,0,0,0,0,0,0],
[0,0,0,0,4,0,0,0,0,0,0,0,0],    
[0,0,0,0,0,6,0,0,0,0,0,0,0],
[0,0,0,0,0,2,4,2,0,0,0,0,0],
[0,0,0,0,0,0,0,0,5,0,0,2,0],
[0,0,0,0,0,0,0,0,0,3,0,0,0],
[0,0,0,0,0,0,0,0,0,0,0,0,0],
[0,0,0,0,0,0,1,0,0,0,0,0,0],
[0,2,0,0,0,0,0,0,0,0,0,0,0],
[0,0,0,0,0,0,0,0,0,0,4,0,0],
[0,0,0,0,0,0,0,0,0,0,0,0,2],
[0,0,0,0,0,0,0,0,0,0,0,0,3],
[0,0,0,0,0,0,0,0,0,0,0,0,0]   

]


marquage=[]
file=[]
cout=[0,0,0,0,0,0,0,0,0,0,0,0,0]
mark=[0,0,0,0,0,0,0,0,0,0,0,0,0]
N=13

def bfs( graph, start ):
    
    file.append( start )
    mark[start]=1
    
    while file:
        s = file.pop( 0 )
        print( '----  : ' , s)
        for v in range( N ):
            if graph[s][v] != 0 :
                cout[v] = max( cout[v] , cout[s] + graph[s][v] )
                if mark[v] == 0:
                    file.append( v )
                    mark[v] = 1

bfs( graph, 0 )
print( cout )